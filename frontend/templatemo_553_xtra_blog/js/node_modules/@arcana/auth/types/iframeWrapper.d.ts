import { IframeWrapperParams, AppMode, WalletType, ChildMethods, ParentMethods } from './typings';
import { Connection } from 'penpal';
export default class IframeWrapper {
    params: IframeWrapperParams;
    private iframe;
    widgetBubble: HTMLButtonElement;
    widgetIframeContainer: HTMLDivElement;
    appMode: AppMode;
    private state;
    private iframeCommunication;
    constructor(params: IframeWrapperParams);
    setConnectionMethods(methods: ParentMethods): Promise<{
        iframe: HTMLIFrameElement;
        communication: Connection<ChildMethods>;
    }>;
    setWalletType(walletType: WalletType, appMode: AppMode | undefined): void;
    getState(): "open" | "closed";
    showWidgetBubble(): void;
    handleDisconnect(): void;
    hideWidgetBubble(): void;
    onReceivingPendingRequestCount(count: number): void;
    getAppConfig: () => import("./typings").AppConfig;
    show: () => void;
    hide: () => void;
    private constructWidgetIframeStructure;
    private getIframeUrl;
    private createWidgetIframe;
    private checkDuplicateIframe;
    private createWidgetBubble;
    private initWalletUI;
    private onCloseBubbleClick;
    private resizeWidgetUI;
    private closeWidgetIframe;
    private openWidgetIframe;
    private checkSecureOrigin;
}
